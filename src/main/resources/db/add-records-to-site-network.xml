<?xml version="1.0" encoding="UTF-8"?> 
<databaseChangeLog 
         xmlns="http://www.liquibase.org/xml/ns/dbchangelog" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd 
             http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd"> 
 
 
     <changeSet id="1477355459" author="hongjin"> 
         <createProcedure> 
             create or replace function add_records_to_site_network() returns integer as 
             $body$ 
declare
rsc record;
v_id cors_site_network.id%type;


BEGIN 
  RAISE NOTICE 'Start to update site_network and relation...';

  for rsc IN select distinct network_1 as "name" from temp_site_network where network_1 is not null
union
select distinct network_2 as "name" from temp_site_network where network_2 is not null
union
select distinct network_3 as "name" from temp_site_network where network_3 is not null
union
select distinct network_4 as "name" from temp_site_network where network_4 is not null
order by 1 LOOP

v_id := nextVal('seq_surrogate_keys');

insert into cors_site_network (id, name) values (v_id, rsc.name);
  
END LOOP;
--commit;
RAISE NOTICE 'Done update site_network and relation.';
   RETURN null;

END;
             $body$ language plpgsql 
         </createProcedure> 
         <rollback> 
             <sql> 
                 drop function add_records_to_site_network() 
             </sql> 
         </rollback> 
     </changeSet> 
     <changeSet id="1477355830" author="hongjin"> 
         <createProcedure> 
             CREATE OR REPLACE FUNCTION add_records_to_site_in_network()
RETURNS integer AS $total$

declare
rsc record;
v_id cors_site_in_network.id%type;


BEGIN 
  RAISE NOTICE 'Start to update site_in_network and relation...';

  for rsc IN select b.id as "site_id", a.network_1, c.id as "network_id"
from temp_site_network a, cors_site b, cors_site_network c
where a.four_character_id = b.four_character_id
and a.network_1 = c.name
union
select b.id as "site_id", a.network_2, c.id as "network_id"
from temp_site_network a, cors_site b, cors_site_network c
where a.four_character_id = b.four_character_id
and a.network_2 = c.name
union
select b.id as "site_id", a.network_3, c.id as "network_id"
from temp_site_network a, cors_site b, cors_site_network c
where a.four_character_id = b.four_character_id
and a.network_3 = c.name
union
select b.id as "site_id", a.network_4, c.id as "network_id"
from temp_site_network a, cors_site b, cors_site_network c
where a.four_character_id = b.four_character_id
and a.network_4 = c.name
order by 1 LOOP


      v_id  := nextVal('seq_surrogate_keys');
      insert into cors_site_in_network (id, cors_site_id, cors_site_network_id) values (v_id, rsc.site_id, rsc.network_id);       

  
END LOOP;
--commit;
RAISE NOTICE 'Done update site_in_network and relation.';

RETURN null;
END;
             $total$ language plpgsql 
         </createProcedure> 
         <rollback> 
             <sql> 
                 drop function add_records_to_site_in_network() 
             </sql> 
         </rollback> 
     </changeSet>  
</databaseChangeLog>
